---
import Button from "./ui/button.astro";
---

<!-- To make this contact form work, create your free access key from https://web3forms.com/
     Then you will get all form submissions in your email inbox. -->
<form
  method="POST"
  id="form"
  class="needs-validation"
>
  <div class="mb-5">
    <label for="email_address" class="sr-only">Email Address</label><input
      id="email_address"
      type="email"
      placeholder="Email Address"
      name="email"
      required
      class="w-full px-4 py-3 border-2 placeholder:text-gray-800 rounded-md outline-none focus:ring-4 border-gray-300 focus:border-gray-600 ring-gray-100"
    />
    <div class="empty-feedback text-red-400 text-sm mt-1">
      Please provide your email address.
    </div>
    <div class="invalid-feedback text-red-400 text-sm mt-1">
      Please provide a valid email address.
    </div>
  </div>
  <div class="mb-5">
    <input
      type="text"
      placeholder="First Name"
      class="w-full px-4 py-3 border-2 placeholder:text-gray-800 rounded-md outline-none focus:ring-4 border-gray-300 focus:border-gray-600 ring-gray-100"
      name="firstname"
    />
    <div class="empty-feedback invalid-feedback text-red-400 text-sm mt-1">
      Please provide your first name.
    </div>
  </div>
  <div class="mb-5">
    <input
      type="text"
      placeholder="Last Name"
      class="w-full px-4 py-3 border-2 placeholder:text-gray-800 rounded-md outline-none focus:ring-4 border-gray-300 focus:border-gray-600 ring-gray-100"
      name="lastname"
    />
    <div class="empty-feedback invalid-feedback text-red-400 text-sm mt-1">
      Please provide your last name.
    </div>
  </div>
  <Button type="submit" size="lg" block>Sign up for Waitlist</Button>
  <div id="result" class="mt-3 text-center"></div>
</form>

<style>
  .invalid-feedback,
  .empty-feedback {
    display: none;
  }

  .was-validated :placeholder-shown:invalid ~ .empty-feedback {
    display: block;
  }

  .was-validated :not(:placeholder-shown):invalid ~ .invalid-feedback {
    display: block;
  }

  .is-invalid,
  .was-validated :invalid {
    border-color: #dc3545;
  }
</style>

<script>
  const form = document.getElementById("form") as HTMLFormElement;
  const result = document.getElementById("result") as HTMLElement;
 
  form?.addEventListener("submit", function (e) {
    e.preventDefault();
    form.classList.add("was-validated");
    if (!form.checkValidity()) {
      const invalid = form.querySelectorAll(":invalid")[0] as HTMLElement;
      invalid.focus()
      return;
    }
    const formData = new FormData(form);
    const data = {
      email: formData.get("email"),
      firstname: formData.get("firstname"),
      lastname: formData.get("lastname")
    }

    result.innerHTML = "Sending...";
    fetch("/.netlify/functions/email", {
      method: "POST",
      body: JSON.stringify(data),
    })
      .then(async () => {
          result.classList.add("text-green-500");
          result.innerHTML = "Thank you! Check your email for updates";
      })
      .catch((error) => {
        console.log(error);
        result.classList.add("text-green-500");
        result.innerHTML = "Thank you! Check your email for updates";
      })
      .then(function () {
        form.reset();
        form.classList.remove("was-validated");
        setTimeout(() => {
          result.style.display = "none";
        }, 5000);
      });
  });
</script>
